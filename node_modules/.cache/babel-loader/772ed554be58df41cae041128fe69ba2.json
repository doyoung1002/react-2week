{"ast":null,"code":"// Action value\nconst ADD_TODO = \"ADD_TODO\";\nconst GET_TODO_BY_ID = \"GET_TODO_BY_ID\";\nconst DELETE_TODO = \"DELETE_TODO\";\nconst TOGGLE_STATUS_TODO = \"TOGGLE_STATUS_TODO\"; // Action Creator\n// Todo를 추가하는 action creator\n\nexport const addTodo = payload => {\n  return { ...state,\n    todos: [...state.todos, action.payload]\n  };\n}; // Todo를 지우는 action creator\n\nexport const deleteTodo = payload => {\n  return {\n    type: DELETE_TODO,\n    payload\n  };\n}; // Todo를 isDone를 변경하는 action creator\n\nexport const toggleStatusTodo = payload => {\n  return {\n    type: TOGGLE_STATUS_TODO,\n    payload\n  };\n}; // 상세 페이지에서 특정 Todo만 조회하는 action creator\n\nexport const getTodoByID = payload => {\n  return {\n    type: GET_TODO_BY_ID,\n    payload\n  };\n}; // initial state\n\nconst initialState = {\n  todos: [{\n    id: \"1\",\n    title: \"리액트\",\n    body: \"리액트를 배워봅시다\",\n    isDone: false\n  }],\n  todo: {\n    id: \"0\",\n    title: \"\",\n    body: \"\",\n    isDone: false\n  }\n};\n\nconst todos = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TODO:\n      return { ...state,\n        todos: [action.payload]\n      };\n\n    case TOGGLE_STATUS_TODO:\n      return { ...state,\n        todos: state.todos.map(todo => {\n          if (todo.id === action.payload) {\n            return { ...todo,\n              isDone: !todo.isDone\n            };\n          } else {\n            return todo;\n          }\n        })\n      };\n\n    case GET_TODO_BY_ID:\n      return { ...state,\n        todo: state.todos.find(todo => {\n          return todo.id === action.payload;\n        })\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default todos;","map":{"version":3,"names":["ADD_TODO","GET_TODO_BY_ID","DELETE_TODO","TOGGLE_STATUS_TODO","addTodo","payload","state","todos","action","deleteTodo","type","toggleStatusTodo","getTodoByID","initialState","id","title","body","isDone","todo","map","find"],"sources":["/Users/leedoyoung/Desktop/todolist_redux_assignment/src/redux/modules/todos.js"],"sourcesContent":["// Action value\nconst ADD_TODO = \"ADD_TODO\";\nconst GET_TODO_BY_ID = \"GET_TODO_BY_ID\";\nconst DELETE_TODO = \"DELETE_TODO\";\nconst TOGGLE_STATUS_TODO = \"TOGGLE_STATUS_TODO\";\n\n// Action Creator\n// Todo를 추가하는 action creator\nexport const addTodo = (payload) => {\n  return {\n    ...state,\n    todos: [...state.todos, action.payload],\n  };\n};\n\n// Todo를 지우는 action creator\nexport const deleteTodo = (payload) => {\n  return {\n    type: DELETE_TODO,\n    payload,\n  };\n};\n\n// Todo를 isDone를 변경하는 action creator\nexport const toggleStatusTodo = (payload) => {\n  return {\n    type: TOGGLE_STATUS_TODO,\n    payload,\n  };\n};\n\n// 상세 페이지에서 특정 Todo만 조회하는 action creator\nexport const getTodoByID = (payload) => {\n  return {\n    type: GET_TODO_BY_ID,\n    payload,\n  };\n};\n\n// initial state\nconst initialState = {\n  todos: [\n    {\n      id: \"1\",\n      title: \"리액트\",\n      body: \"리액트를 배워봅시다\",\n      isDone: false,\n    },\n  ],\n  todo: {\n    id: \"0\",\n    title: \"\",\n    body: \"\",\n    isDone: false,\n  },\n};\n\nconst todos = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        ...state,\n        todos: [action.payload],\n      };\n\n    case TOGGLE_STATUS_TODO:\n      return {\n        ...state,\n        todos: state.todos.map((todo) => {\n          if (todo.id === action.payload) {\n            return {\n              ...todo,\n              isDone: !todo.isDone,\n            };\n          } else {\n            return todo;\n          }\n        }),\n      };\n\n    case GET_TODO_BY_ID:\n      return {\n        ...state,\n        todo: state.todos.find((todo) => {\n          return todo.id === action.payload;\n        }),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,UAAjB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,kBAAkB,GAAG,oBAA3B,C,CAEA;AACA;;AACA,OAAO,MAAMC,OAAO,GAAIC,OAAD,IAAa;EAClC,OAAO,EACL,GAAGC,KADE;IAELC,KAAK,EAAE,CAAC,GAAGD,KAAK,CAACC,KAAV,EAAiBC,MAAM,CAACH,OAAxB;EAFF,CAAP;AAID,CALM,C,CAOP;;AACA,OAAO,MAAMI,UAAU,GAAIJ,OAAD,IAAa;EACrC,OAAO;IACLK,IAAI,EAAER,WADD;IAELG;EAFK,CAAP;AAID,CALM,C,CAOP;;AACA,OAAO,MAAMM,gBAAgB,GAAIN,OAAD,IAAa;EAC3C,OAAO;IACLK,IAAI,EAAEP,kBADD;IAELE;EAFK,CAAP;AAID,CALM,C,CAOP;;AACA,OAAO,MAAMO,WAAW,GAAIP,OAAD,IAAa;EACtC,OAAO;IACLK,IAAI,EAAET,cADD;IAELI;EAFK,CAAP;AAID,CALM,C,CAOP;;AACA,MAAMQ,YAAY,GAAG;EACnBN,KAAK,EAAE,CACL;IACEO,EAAE,EAAE,GADN;IAEEC,KAAK,EAAE,KAFT;IAGEC,IAAI,EAAE,YAHR;IAIEC,MAAM,EAAE;EAJV,CADK,CADY;EASnBC,IAAI,EAAE;IACJJ,EAAE,EAAE,GADA;IAEJC,KAAK,EAAE,EAFH;IAGJC,IAAI,EAAE,EAHF;IAIJC,MAAM,EAAE;EAJJ;AATa,CAArB;;AAiBA,MAAMV,KAAK,GAAG,YAAkC;EAAA,IAAjCD,KAAiC,uEAAzBO,YAAyB;EAAA,IAAXL,MAAW;;EAC9C,QAAQA,MAAM,CAACE,IAAf;IACE,KAAKV,QAAL;MACE,OAAO,EACL,GAAGM,KADE;QAELC,KAAK,EAAE,CAACC,MAAM,CAACH,OAAR;MAFF,CAAP;;IAKF,KAAKF,kBAAL;MACE,OAAO,EACL,GAAGG,KADE;QAELC,KAAK,EAAED,KAAK,CAACC,KAAN,CAAYY,GAAZ,CAAiBD,IAAD,IAAU;UAC/B,IAAIA,IAAI,CAACJ,EAAL,KAAYN,MAAM,CAACH,OAAvB,EAAgC;YAC9B,OAAO,EACL,GAAGa,IADE;cAELD,MAAM,EAAE,CAACC,IAAI,CAACD;YAFT,CAAP;UAID,CALD,MAKO;YACL,OAAOC,IAAP;UACD;QACF,CATM;MAFF,CAAP;;IAcF,KAAKjB,cAAL;MACE,OAAO,EACL,GAAGK,KADE;QAELY,IAAI,EAAEZ,KAAK,CAACC,KAAN,CAAYa,IAAZ,CAAkBF,IAAD,IAAU;UAC/B,OAAOA,IAAI,CAACJ,EAAL,KAAYN,MAAM,CAACH,OAA1B;QACD,CAFK;MAFD,CAAP;;IAMF;MACE,OAAOC,KAAP;EA9BJ;AAgCD,CAjCD;;AAmCA,eAAeC,KAAf"},"metadata":{},"sourceType":"module"}